import random

#This method tests whether or not the given password has at least 8 characters, at least 2 digits, and at least one special character.
#If any requirements are not met, the program will tell the user which requirements have not been met.
def validatePassword(password): 
    validityStatus = True
    digitCount = 0
    specialCharacter = False
    length = len(password)
    
    for i in range(0,length): 
        ch = password[i]
        if (ch.isdigit()):
            digitCount += 1
        #Check how many digits are in the password.
        if (ch.isdigit() == False and ch.isalpha() == False):
            specialCharacter = True
        #If character is NOT a letter or digit, then there is a special character.
            
    if (digitCount < 2):
        print("Password must have at least 2 numbers.")
        validityStatus = False

    if (specialCharacter == False):
        print("Password must have at least one special character.")   
        validityStatus = False
    
    if (length < 8):
        print("Password must be at least 8 characters.")
        validityStatus = False
    
    return validityStatus

#This method checks if the password is valid without printing out any messages
def quietValidatePassword(password):
    validityStatus = True
    digitCount = 0
    specialCharacter = False
    length = len(password)
    
    for i in range(0,length): 
        ch = password[i]
        if (ch.isdigit()):
            digitCount += 1
        if (ch.isdigit() == False and ch.isalpha() == False):
            specialCharacter = True
            
    if (digitCount < 2 or specialCharacter == False or length < 8):
        validityStatus = False
    
    return validityStatus

#Auto password generator
def generateValidPassword():
    characterList = 'abcdefghijklmnopqrstuvwxyz1234567890!@#$%^&*()}{[]-_+='
    password = ''
    while quietValidatePassword(password) == False:
        password = ''
        for i in range(1,17):
            nextChar = random.choice(characterList)
            password = nextChar + password
    return password    

def main(): 
    while True:
        print("Would you like an autogenerated password? Please enter 'Yes' or 'No'")
        answer = input()
        if answer.lower() == 'yes':
            password = generateValidPassword()
            print("Your password is: " + password)
            break
        elif answer.lower() == 'no':
            while True:
                print("Please enter the desired password: ")
                password = input()
                if(validatePassword(password) == True):
                    print("This is a valid password.")
                    break
                else:
                    print("This is not a valid password.")
            break
        else:
            print("That is not a valid response.")


if __name__ == "__main__":
    main()
